{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Barracuda CloudGen Firewall - HA Cluster with EIP shifting",
    "Metadata" : {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
              {
                "Label" : {
                    "default": "Instance Settings"
                },
                "Parameters" : [
                    "InstanceType",
                    "LicenceMode",
                    "ReleaseVersion"
                ]
              },
              {
                "Label" : {
                    "default": "Network Settings"
                },
                "Parameters" : [
                    "VpcAddress",
                    "NGF1MIP",
                    "NGF2MIP",
                    "Zone1",
                    "Zone2"
                ]
              }
            ],
            "ParameterLabels": {
              "InstanceType": {
                "default": "Instance Type"
              },
              "IAMProfile": {
                "default": "IAM Profile Name"
              },
              "NGF1MIP": {
                "default": "Primary Firewall IP"
              },
              "NGF2MIP": {
                "default": "Secondary Firewall IP"
              },
              "Zone1": {
                "default": "AZ for Primary NGF"
              },
              "Zone2": {
                "default": "AZ for Secondary NGF"
              }
            }
        }
    },
    "Parameters": {
        "Prefix": {
            "Type": "String",
            "Default": "NGFHA",
            "Description": "Enter the prefix prepended to resources of this template"
        },
        "InstanceType": {
            "Description": "Select the EC2 instance type",
            "Type": "String",
            "Default": "c4.large",
            "AllowedValues": [
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge"
            ]
        },
        "LicenceMode": {
            "Description": "Select the license type.",
            "Type": "String",
            "Default": "Hourly",
            "AllowedValues": [
                "Hourly",
                "BYOL",
                "MeteredBilling"
            ]
        },
        "ReleaseVersion": {
          "Description": "Which release do you want to deploy?",
          "Type": "String",
          "Default": "7.2.0",
          "AllowedValues": [
            "7.2.0", "7.1.1"
          ]
        },
        "IAMProfile": {
            "Description": "Select the IAM Role for the NextGen Firewall.",
            "Type": "String",
            "Default": "NextGenFirewallRole"
        },
        "NGF1MIP": {
          "Type": "String",
          "Default": "192.168.1.10",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
        },
        "NGF2MIP": {
          "Type": "String",
          "Default": "192.168.2.10",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
        },
        "Zone1": {
          "Type": "AWS::EC2::AvailabilityZone::Name",
          "Description": "Availability Zone for primary firewall"
        },
        "Zone2": {
          "Type": "AWS::EC2::AvailabilityZone::Name",
          "Description": "Availability Zone for secondary firewall"
        },
        "VpcAddress": {
          "Description": "IP address space for new VPC",
          "Type": "String",
          "Default": "192.168.0.0/16",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
          "ConstraintDescription": "Use valid CIDR notation"
        }
    },
    "Mappings": {
      "amis": {}
    },
    "Resources": {
        "vpcNGF": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                  "Ref": "VpcAddress"
                },
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "Prefix"
                                    },
                                    "-VPC"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TemplateName",
                        "Value": {
                            "Ref": "Prefix"
                        }
                    }
                ]
            }
        },
        "subnetPublic1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "Zone1"
                },
                "CidrBlock": {
                    "Fn::Join": [ ".", [
                      {"Fn::Select": [ 0, {"Fn::Split": [ ".", {"Ref": "NGF1MIP" }]} ]},
                      {"Fn::Select": [ 1, {"Fn::Split": [ ".", {"Ref": "NGF1MIP" }]} ]},
                      {"Fn::Select": [ 2, {"Fn::Split": [ ".", {"Ref": "NGF1MIP" }]} ]},
                      "0/24"
                      ]]
                },
                "VpcId": {
                    "Ref": "vpcNGF"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "Prefix"
                                    },
                                    "-PublicSubnet1"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TemplateName",
                        "Value": {
                            "Ref": "Prefix"
                        }
                    }
                ]
            }
        },
        "subnetPublic2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                  "Ref": "Zone2"
                },
                "CidrBlock": {
                  "Fn::Join": [ ".", [
                    {"Fn::Select": [ 0, {"Fn::Split": [ ".", {"Ref": "NGF2MIP" }]} ]},
                    {"Fn::Select": [ 1, {"Fn::Split": [ ".", {"Ref": "NGF2MIP" }]} ]},
                    {"Fn::Select": [ 2, {"Fn::Split": [ ".", {"Ref": "NGF2MIP" }]} ]},
                    "0/24"
                    ]]
                },
                "VpcId": {
                    "Ref": "vpcNGF"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "Prefix"
                                    },
                                    "-PublicSubnet2"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TemplateName",
                        "Value": {
                            "Ref": "Prefix"
                        }
                    }
                ]
            }
        },
        "igw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "Prefix"
                                    },
                                    "-IGW"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TemplateName",
                        "Value": {
                            "Ref": "Prefix"
                        }
                    }
                ]
            }
        },
        "igwToInternet": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "vpcNGF"
                },
                "InternetGatewayId": {
                    "Ref": "igw"
                }
            }
        },
        "routeTablePublic": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "vpcNGF"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "Prefix"
                                    },
                                    "-RouteTablePublic"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TemplateName",
                        "Value": {
                            "Ref": "Prefix"
                        }
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "igwToInternet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "routeTablePublic"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "igw"
                }
            }
        },
        "routeTableToSubnetPublic1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "routeTablePublic"
                },
                "SubnetId": {
                    "Ref": "subnetPublic1"
                }
            }
        },
        "routeTableToSubnetPublic2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "routeTablePublic"
                },
                "SubnetId": {
                    "Ref": "subnetPublic2"
                }
            }
        },
        "routeTablePrivate": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "vpcNGF"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "Prefix"
                                    },
                                    "-RouteTablePrivate"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TemplateName",
                        "Value": {
                            "Ref": "Prefix"
                        }
                    }
                ]
            }
        },
        "PrivateRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "instanceNGF1",
            "Properties": {
                "RouteTableId": {
                    "Ref": "routeTablePrivate"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "instanceNGF1"
                }
            }
        },
        "securityGroupNGF": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow All Traffic.",
                "VpcId": {
                    "Ref": "vpcNGF"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "Prefix"
                                    },
                                    "-SecurityGroup"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TemplateName",
                        "Value": {
                            "Ref": "Prefix"
                        }
                    }
                ]
            }
        },
        "floatingEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "floatingEIPAssoc": {
          "Type": "AWS::EC2::EIPAssociation",
          "Properties": {
            "AllocationId": { "Fn::GetAtt": [ "floatingEIP", "AllocationId" ]},
            "InstanceId": { "Ref": "instanceNGF1" }
          }
        },
        "instanceNGF1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "DisableApiTermination": "false",
                "InstanceInitiatedShutdownBehavior": "stop",
                "IamInstanceProfile": {
                  "Ref": "IAMProfile"
                },
                "ImageId": {
                  "Fn::FindInMap": [
                    { "Fn::FindInMap": [ "amiMapMap", { "Ref": "ReleaseVersion" }, "mapName" ]},
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "LicenceMode"
                    }
                  ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "Monitoring": "false",
                "SourceDestCheck": "false",
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "Description": {
                            "Fn::Join": [
                                "",
                                [
                                    "NIC NGF1 ",
                                    {
                                        "Ref": "Prefix"
                                    }
                                ]
                            ]
                        },
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "subnetPublic1"
                        },
                        "PrivateIpAddresses": [
                            {
                                "PrivateIpAddress": {
                                  "Ref": "NGF1MIP"
                                },
                                "Primary": "true"
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "securityGroupNGF"
                            }
                        ],
                        "AssociatePublicIpAddress": "true"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "Prefix"
                                    },
                                    "-NGF1"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TemplateName",
                        "Value": {
                            "Ref": "Prefix"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/phion/bin/cloud-setmip",
                                            {
                                                "Ref": "NGF1MIP"
                                            },
                                            "24",
                                            {
                                              "Fn::Join": [ ".", [
                                                {"Fn::Select": [ 0, {"Fn::Split": [ ".", {"Ref": "NGF1MIP" }]} ]},
                                                {"Fn::Select": [ 1, {"Fn::Split": [ ".", {"Ref": "NGF1MIP" }]} ]},
                                                {"Fn::Select": [ 2, {"Fn::Split": [ ".", {"Ref": "NGF1MIP" }]} ]},
                                                "1"
                                                ]]
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "echo",
                                            {
                                                "Ref": "instanceNGF2"
                                            },
                                            "|/opt/phion/bin/create-dha -s S1 -c -o",
                                            {
                                                "Ref": "NGF2MIP"
                                            },
                                            "-n",
                                            "24",
                                            "-g",
                                            {
                                              "Fn::Join": [ ".", [
                                                {"Fn::Select": [ 0, {"Fn::Split": [ ".", {"Ref": "NGF2MIP" }]} ]},
                                                {"Fn::Select": [ 1, {"Fn::Split": [ ".", {"Ref": "NGF2MIP" }]} ]},
                                                {"Fn::Select": [ 2, {"Fn::Split": [ ".", {"Ref": "NGF2MIP" }]} ]},
                                                "1"
                                                ]]
                                            }
                                        ]
                                    ]
                                },

                                "echo \"[[ \\\"_\\$1\\\" != \\\"_HA-START\\\" ]] && {\" >> /opt/phion/hooks/ha/aws-shift-eip.sh",
	                              "echo \"exit 0\" >> /opt/phion/hooks/ha/aws-shift-eip.sh",
                                "echo \"}\" >> /opt/phion/hooks/ha/aws-shift-eip.sh",
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "echo \"/opt/aws/bin/aws ec2 associate-address",
                                            "--instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                                            "--allocation-id ",
                                            {
                                                "Fn::GetAtt": [ "floatingEIP", "AllocationId" ]
                                            },
                                            "--allow-reassociation\"",
                                            ">> /opt/phion/hooks/ha/aws-shift-eip.sh"
                                        ]
                                    ]
                                },
                                "chmod +x /opt/phion/hooks/ha/aws-shift-eip.sh"
                            ]
                        ]
                    }
                }
            }
        },
        "instanceNGF2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "DisableApiTermination": "false",
                "InstanceInitiatedShutdownBehavior": "stop",
                "IamInstanceProfile": {
                    "Ref": "IAMProfile"
                },
                "ImageId": {
                  "Fn::FindInMap": [
                    { "Fn::FindInMap": [ "amiMapMap", { "Ref": "ReleaseVersion" }, "mapName" ]},
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "LicenceMode"
                    }
                  ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "Monitoring": "false",
                "SourceDestCheck": "false",
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "Description": {
                            "Fn::Join": [
                                "",
                                [
                                    "NIC NGF2 ",
                                    {
                                        "Ref": "Prefix"
                                    }
                                ]
                            ]
                        },
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "subnetPublic2"
                        },
                        "PrivateIpAddresses": [
                            {
                                "PrivateIpAddress": {
                                  "Ref": "NGF2MIP"
                                },
                                "Primary": "true"
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "securityGroupNGF"
                            }
                        ],
                        "AssociatePublicIpAddress": "true"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "Prefix"
                                    },
                                    "-NGF2"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TemplateName",
                        "Value": {
                            "Ref": "Prefix"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "/opt/phion/bin/editconf -f /opt/phion/config/active/boxadm.conf -p RPASSWDENFORCE -v 0",
                                "/opt/phion/bin/editconf -f /opt/phion/config/configroot/boxadm.conf -p RPASSWDENFORCE -v 0",

                                "echo \"[[ \\\"_\\$1\\\" != \\\"_HA-START\\\" ]] && {\" >> /opt/phion/hooks/ha/aws-shift-eip.sh",
                                "echo \"exit 0\" >> /opt/phion/hooks/ha/aws-shift-eip.sh",
                                "echo \"}\" >> /opt/phion/hooks/ha/aws-shift-eip.sh",
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "echo \"/opt/aws/bin/aws ec2 associate-address",
                                            "--instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                                            "--allocation-id ",
                                            {
                                                "Fn::GetAtt": [ "floatingEIP", "AllocationId" ]
                                            },
                                            "--allow-reassociation\"",
                                            ">> /opt/phion/hooks/ha/aws-shift-eip.sh"
                                        ]
                                    ]
                                },
                                "chmod +x /opt/phion/hooks/ha/aws-shift-eip.sh"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "CGFPublicIP": {
            "Description": "Public IP address of the active firewall",
            "Value": { "Ref" : "floatingEIP" }
        },
        "InitialPassword": {
            "Description": "Initial password for firewall management",
            "Value": { "Ref": "instanceNGF1" }
        }
    }
}
