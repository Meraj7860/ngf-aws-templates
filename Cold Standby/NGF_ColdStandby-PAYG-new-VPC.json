{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Barracuda NextGen Firewall 7.1.1 - Cold Standby Cluster",
    "Metadata" : {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
              {
                "Label" : {
                    "default": "Launch Configuration Settings"
                },
                "Parameters" : [
                    "InstanceType",
                    "IAMProfile"
                ]
              },
              {
                "Label": {
                  "default": "Network Settings"
                },
                "Parameters": [
                  "VpcAddress",
                  "PublicSubnetAAddress",
                  "PublicSubnetBAddress"
                ]
              }

            ],
            "ParameterLabels": {
              "InstanceType": {
                "default": "Instance Type"
              },
              "IAMProfile": {
                "default": "IAM Profile"
              },
              "VpcAddress": {
                "default": "VPC Address"
              },
              "PublicSubnetAAddress": {
                "default": "Subnet in Zone A"
              },
              "PublicSubnetBAddress": {
                "default": "Subnet in Zone B"
              },
              "ZoneA": {
                "default": "Zone (A) to deploy to"
              },
              "ZoneB": {
                "default": "Zone (B) to deploy to"
              }
            }
        }
    },
    "Parameters": {
        "InstanceType": {
            "Description": "Select the EC2 instance type.",
            "Type": "String",
            "Default": "m4.xlarge",
            "AllowedValues": [
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge"
            ]
        },
        "IAMProfile": {
            "Description": "Select the IAM Role for the NextGen Firewall.",
            "Type": "String",
            "Default": "NextGenFirewallRole"
        },
        "VpcAddress": {
          "Description": "IP address space for new VPC",
          "Type": "String",
          "Default": "192.168.0.0/16",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
          "ConstraintDescription": "Use valid CIDR notation"
        },
        "PublicSubnetAAddress": {
          "Description": "Public helper subnet in A zone. Must be within VPC address space.",
          "Type": "String",
          "Default": "192.168.0.0/25",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "PublicSubnetBAddress": {
          "Description": "Public helper subnet in B zone. Must be within VPC address space.",
          "Type": "String",
          "Default": "192.168.0.128/25",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "ZoneA": {
          "Description": "",
          "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "ZoneB": {
          "Description": "",
          "Type": "AWS::EC2::AvailabilityZone::Name"
        }
    },
    "Mappings": {
      "AMINGF": {
        "ap-south-1": {
          "PAYG": "ami-e445058b",
          "BYOL": "ami-0342026c"
        },
        "eu-west-2": {
          "PAYG": "ami-992b39fd",
          "BYOL": "ami-16253772"
        },
        "eu-west-1": {
          "PAYG": "ami-0643947f",
          "BYOL": "ami-7445920d"
        },
        "ap-northeast-2": {
          "PAYG": "ami-a32af0cd",
          "BYOL": "ami-9b2bf1f5"
        },
        "ap-northeast-1": {
          "PAYG": "ami-b95181df",
          "BYOL": "ami-b65383d0"
        },
        "sa-east-1": {
          "PAYG": "ami-08b6c964",
          "BYOL": "ami-07b4cb6b"
        },
        "ca-central-1": {
          "PAYG": "ami-13259c77",
          "BYOL": "ami-ae2891ca"
        },
        "ap-southeast-1": {
          "PAYG": "ami-fa9fe099",
          "BYOL": "ami-0da1de6e"
        },
        "ap-southeast-2": {
          "PAYG": "ami-17c72475",
          "BYOL": "ami-2ac52648"
        },
        "eu-central-1": {
          "PAYG": "ami-fdb20f92",
          "BYOL": "ami-09ad1066"
        },
        "us-east-1": {
          "PAYG": "ami-695a9e13",
          "BYOL": "ami-af5b9fd5"
        },
        "us-east-2": {
          "PAYG": "ami-ccc5e8a9",
          "BYOL": "ami-90cae7f5"
        },
        "us-west-1": {
          "PAYG": "ami-e5546785",
          "BYOL": "ami-77546717"
        },
        "us-west-2": {
          "PAYG": "ami-2d925755",
          "BYOL": "ami-cf9c59b7"
        }
      }
    },
    "Resources": {
        "PublicSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for the ASG",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": { "Ref": "VpcAddress" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": ["-", [{ "Ref": "AWS::StackName" }, "VPC" ]]}
                    }
                ]
            }
        },
        "PublicSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "ZoneA" },
                "CidrBlock": { "Ref": "PublicSubnetAAddress" },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "ZoneB" },
                "CidrBlock": { "Ref": "PublicSubnetBAddress" },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "IGW": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "IGWAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "IGW"
                }
            }
        },
        "ElasticIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            },
            "DependsOn": [
                "IGWAttachment"
            ]
        },
        "S3": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "Private",
                "VersioningConfiguration": {
                    "Status": "Enabled"
                }
            }
        },
        "PublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "route-via-IGW"
                  }
                ]
            }
        },
        "PrivateSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": { "Fn::Join": ["-", [{ "Ref": "AWS::StackName" }, "route-via-NGF" ]]}
                  }
                ]
            }
        },
        "PublicDefaultRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "IGWAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                },
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                }
            }
        },
        "PrivateDefaultRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "IGWAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                },
                "RouteTableId": {
                    "Ref": "PrivateSubnetRouteTable"
                }
            }
        },
        "PublicSubnetRouteTableAssocA": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnetA"
                }
            }
        },
        "PublicSubnetRouteTableAssocB": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnetB"
                }
            }
        },
        "LaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AMINGF",
                        {
                            "Ref": "AWS::Region"
                        },
                        "PAYG"
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "PublicSecurityGroup"
                    }
                ],
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "AssociatePublicIpAddress": true,
                "IamInstanceProfile": {
                    "Ref": "IAMProfile"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/phion/bin/aws-asg-provision",
                                            "--bucket",
                                            {
                                                "Ref": "S3"
                                            },
                                            "--topic",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/aws/bin/aws ec2 associate-address",
                                            "--instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                                            "--allocation-id ",
                                            {
                                                "Fn::GetAtt": [ "ElasticIP", "AllocationId" ]
                                            },
                                            "--allow-reassociation"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/aws/bin/aws ec2 modify-instance-attribute",
                                            "--instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                                            "--no-source-dest-check"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/aws/bin/aws ec2 replace-route",
                                            "--route-table-id ",
                                            {
                                                "Ref": "PrivateSubnetRouteTable"
                                            },
                                            "--destination-cidr-block 0.0.0.0/0 --instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                      " ",
                                      [
                                        "/opt/aws/bin/cfn-signal --success true --resource ASG ",
                                        { "Fn::Sub": "--stack ${AWS::StackName} --region ${AWS::Region}"}
                                      ]
                                    ]
                                }
                            ]
                        ]
                    }
                }
            }
        },
        "SNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "DisplayName": {
                  "Ref": "AWS::StackName"
              },
              "TopicName": {
                  "Ref": "AWS::StackName"
              }
            }
        },
        "ASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "CreationPolicy": {
              "ResourceSignal": {
                "Count": "1",
                "Timeout": "PT15M"
              }
            },
            "Properties": {
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnetA"
                    },
                    {
                        "Ref": "PublicSubnetB"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "MinSize": 1,
                "DesiredCapacity": 1,
                "MaxSize": 1,
                "HealthCheckGracePeriod": 1800,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": ["-", [{ "Ref": "AWS::StackName" }, "ASG" ]]},
                        "PropagateAtLaunch": true
                    }
                ]
            },
            "DependsOn": [
                "IGWAttachment"
            ]
        }
    },
    "Outputs": {
      "PublicIP": {
          "Description": "Firewall Public IP",
          "Value": {
              "Ref": "ElasticIP"
          }
      },
      "Password": {
        "Description" : "",
        "Value": "For initial management password check __configNodeId tag of your Auto Scaling Group"
      }
    }
}
