{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Barracuda NextGen Firewall 7.1.1 - Cold Standby Cluster",
    "Metadata" : {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
              {
                "Label" : {
                    "default": "Launch Configuration Settings"
                },
                "Parameters" : [
                    "InstanceType",
                    "IAMProfile"
                ]
              },
              {
                "Label": {
                  "default": "Network Settings"
                },
                "Parameters": [
                  "VpcStackName",
                  "VpcId",
                  "PublicSubnetAId",
                  "PublicSubnetBId",
                  "PrivateSubnetRouteTableId"
                ]
              },
              {
                "Label" : {
                    "default": "NextGen Control Center Settings"
                },
                "Parameters" : [
                    "CCIPAddress",
                    "CCRange",
                    "CCCluster",
                    "CCBoxname",
                    "CCUser",
                    "CCPassword"
                ]
              }
            ],
            "ParameterLabels": {
              "InstanceType": {
                "default": "Instance Type"
              },
              "IAMProfile": {
                "default": "IAM Profile"
              },
              "VpcId": {
                "default": "VPC"
              },
              "PublicSubnetAId": {
                "default": "Primary AZ subnet"
              },
              "PublicSubnetBId": {
                "default": "Secondary AZ subnet"
              },
              "PrivateSubnetRouteTableId": {
                "default": "Route table to be maintained"
              },
              "CCIPAddress": {
                "default": "Control Center IP address"
              },
              "CCRange": {
                "default": "Control Center Range ID"
              },
              "CCCluster": {
                "default": "Control Center Cluster Name"
              },
              "CCBoxname": {
                "default": "Box Name"
              },
              "CCUser": {
                "default": "Control Center username"
              },
              "CCPassword": {
                "default": "Control Center password/key"
              }
            }
        }
    },
    "Parameters": {
        "InstanceType": {
            "Description": "Select the EC2 instance type.",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge"
            ]
        },
        "IAMProfile": {
            "Description": "Select the IAM Role for the NextGen Firewall.",
            "Type": "String",
            "Default": "NextGenFirewallRole"
        },
        "VpcId": {
          "Description": "VPC to deploy to",
          "Type": "String",
          "Default": ""
        },
        "PublicSubnetAId": {
          "Description": "Primary public subnet for firewall.",
          "Type": "String",
          "Default": ""
        },
        "PublicSubnetBId": {
          "Description": "Secondary pbulic subnet for firewall.",
          "Type": "String",
          "Default": ""
        },
        "PrivateSubnetRouteTableId": {
          "Description": "Firewall will point default route in this table to itself",
          "Type": "String",
          "Default": ""
        },
        "VpcStackName": {
          "Description": "Name of VPC stack if created using attached vpc.json. (If used VPC, Subnets and Route Table parameters will be filled in automatically.)",
          "Type": "String",
          "Default": ""
        },
        "CCIPAddress": {
            "Description": "IP Address or hostname of the CC",
            "Type": "String"
        },
        "CCUser": {
            "Description": "(optional) User on the CC used to retrieve the PAR file. Leave empty to use PAR File Retrieval Key.",
            "Type": "String"
        },
        "CCPassword": {
            "Description": "Password of the CC User / PAR File Retrieval Key",
            "Type": "String",
            "NoEcho": "true"
        },
        "CCCluster": {
            "Description": "Name of the Cluster on the CC",
            "Type": "String"
        },
        "CCRange": {
            "Description": "Name of the Range on the CC",
            "Type": "Number",
            "Default": "1"
        },
        "CCBoxname": {
            "Description": "Name of the Box on the CC",
            "Type": "String"
        }
    },
    "Mappings": {
      "AMINGF": {
        "ap-south-1": {
          "PAYG": "ami-e445058b",
          "BYOL": "ami-0342026c"
        },
        "eu-west-2": {
          "PAYG": "ami-992b39fd",
          "BYOL": "ami-16253772"
        },
        "eu-west-1": {
          "PAYG": "ami-0643947f",
          "BYOL": "ami-7445920d"
        },
        "ap-northeast-2": {
          "PAYG": "ami-a32af0cd",
          "BYOL": "ami-9b2bf1f5"
        },
        "ap-northeast-1": {
          "PAYG": "ami-b95181df",
          "BYOL": "ami-b65383d0"
        },
        "sa-east-1": {
          "PAYG": "ami-08b6c964",
          "BYOL": "ami-07b4cb6b"
        },
        "ca-central-1": {
          "PAYG": "ami-13259c77",
          "BYOL": "ami-ae2891ca"
        },
        "ap-southeast-1": {
          "PAYG": "ami-fa9fe099",
          "BYOL": "ami-0da1de6e"
        },
        "ap-southeast-2": {
          "PAYG": "ami-17c72475",
          "BYOL": "ami-2ac52648"
        },
        "eu-central-1": {
          "PAYG": "ami-fdb20f92",
          "BYOL": "ami-09ad1066"
        },
        "us-east-1": {
          "PAYG": "ami-695a9e13",
          "BYOL": "ami-af5b9fd5"
        },
        "us-east-2": {
          "PAYG": "ami-ccc5e8a9",
          "BYOL": "ami-90cae7f5"
        },
        "us-west-1": {
          "PAYG": "ami-e5546785",
          "BYOL": "ami-77546717"
        },
        "us-west-2": {
          "PAYG": "ami-2d925755",
          "BYOL": "ami-cf9c59b7"
        }
      }
    },
    "Conditions": {
      "VpcFromStack": {
        "Fn::Not": [
          {"Fn::Equals":
            [ "",
              { "Ref": "VpcStackName" }
            ]
          }
        ]
      },
      "SharedKeyAuth": {
        "Fn::Equals": [
          {
            "Ref": "CCUser"
          },
          ""
        ]
      }
    },
    "Resources": {
        "PublicSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for the ASG",
                "VpcId": {
                    "Fn::If": [
                      "VpcFromStack",
                      { "Fn::ImportValue": { "Fn::Sub": "${VpcStackName}-VpcId" }},
                      { "Ref": "VpcId" }
                    ]
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "ElasticIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "LaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AMINGF",
                        {
                            "Ref": "AWS::Region"
                        },
                        "BYOL"
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "PublicSecurityGroup"
                    }
                ],
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "AssociatePublicIpAddress": true,
                "IamInstanceProfile": {
                    "Ref": "IAMProfile"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                {
                                  "Fn::Join": [
                                      "",
                                      [
                                        "#!/bin/bash\n\n",
                                        { "Fn::Sub": "echo \"${CCPassword}\" | /opt/phion/bin/getpar" },
                                        { "Fn::Sub": " -a ${CCIPAddress}" },
                                        { "Fn::Sub": " -r ${CCRange}" },
                                        { "Fn::Sub": " -c ${CCCluster}" },
                                        { "Fn::Sub": " -b ${CCBoxname}" },
                                        { "Fn::If": [
                                          "SharedKeyAuth",
                                          "",
                                          { "Fn::Join": [ "", [ " -u ", { "Ref": "CCUser" }]]}
                                        ]},
                                        " -d /opt/phion/update/box.par -s",
                                        " --verbosity 10 ",
                                        " >> /tmp/getpar.log",
                                        " || /opt/aws/bin/cfn-signal -e 1 --resource ASG  ",
                                        { "Fn::Sub": "--stack ${AWS::StackName} --region ${AWS::Region}"}
                                      ]
                                  ]
                                },
                                "InstanceId=`curl -s http://169.254.169.254/latest/meta-data/instance-id`",
                                "AWSRegion=`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/[a-z]$//'`",
                                "ASGName=`/opt/aws/bin/aws autoscaling describe-auto-scaling-instances --instance-ids=$InstanceId --region $AWSRegion --query \"AutoScalingInstances[0].AutoScalingGroupName\" --output text`",
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "/opt/aws/bin/aws autoscaling create-or-update-tags --tags ",
                                      "\"ResourceId=$ASGName,",
                                      "ResourceType=auto-scaling-group,Key=barracuda:NGCC Provisioning Result,",
                                      "Value=`tail -1 /tmp/getpar.log`,PropagateAtLaunch=false\"",
                                      " --region $AWSRegion"
                                    ]
                                  ]
                                },
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/aws/bin/aws ec2 associate-address",
                                            "--instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                                            "--allocation-id ",
                                            {
                                                "Fn::GetAtt": [ "ElasticIP", "AllocationId" ]
                                            },
                                            "--allow-reassociation"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/aws/bin/aws ec2 modify-instance-attribute",
                                            "--instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                                            "--no-source-dest-check"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "/opt/aws/bin/aws ec2 replace-route",
                                            "--route-table-id ",
                                            {
                                              "Fn::If": [
                                                "VpcFromStack",
                                                { "Fn::ImportValue": { "Fn::Sub": "${VpcStackName}-PrivateSubnetRouteTableId" }},
                                                { "Ref": "PrivateSubnetRouteTableId" }
                                              ]
                                            },
                                            "--destination-cidr-block 0.0.0.0/0 --instance-id $(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id)"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                      " ",
                                      [
                                        "/opt/aws/bin/cfn-signal --success true --resource ASG ",
                                        { "Fn::Sub": "--stack ${AWS::StackName} --region ${AWS::Region}"}
                                      ]
                                    ]
                                }
                            ]
                        ]
                    }
                }
            },
            "DependsOn": "PublicSecurityGroup"
        },
        "ASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "CreationPolicy": {
              "ResourceSignal": {
                "Count": "1",
                "Timeout": "PT15M"
              }
            },
            "Properties": {
                "VPCZoneIdentifier": [
                    {
                      "Fn::If": [
                        "VpcFromStack",
                        { "Fn::ImportValue": { "Fn::Sub": "${VpcStackName}-PublicSubnetAId" }},
                        { "Ref": "PublicSubnetAId" }
                      ]
                    },
                    {
                      "Fn::If": [
                        "VpcFromStack",
                        { "Fn::ImportValue": { "Fn::Sub": "${VpcStackName}-PublicSubnetBId" }},
                        { "Ref": "PublicSubnetBId" }
                      ]
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "MinSize": 1,
                "DesiredCapacity": 1,
                "MaxSize": 1,
                "HealthCheckGracePeriod": 1800,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Ref": "CCBoxname" },
                        "PropagateAtLaunch": true
                    }
                ]
            },
            "DependsOn": "LaunchConfiguration"
        }
    },
    "Outputs": {
      "PublicIP": {
          "Description": "Firewall Public IP",
          "Value": {
              "Ref": "ElasticIP"
          }
      }
    }
}
