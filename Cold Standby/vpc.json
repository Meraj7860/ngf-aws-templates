{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "VPC for NGF_Coldstandby-existing-VPC templates",
    "Metadata" : {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
              {
                "Label": {
                  "default": "Network Settings"
                },
                "Parameters": [
                  "VpcAddress",
                  "PublicSubnetAAddress",
                  "PublicSubnetBAddress"
                ]
              },
              {
                "Label": {
                  "default": "Availability Zones"
                },
                "Parameters": [
                  "ZoneA",
                  "ZoneB"
                ]
              }

            ],
            "ParameterLabels": {
              "VpcAddress": {
                "default": "VPC Address"
              },
              "PublicSubnetAAddress": {
                "default": "Subnet in Zone A"
              },
              "PublicSubnetBAddress": {
                "default": "Subnet in Zone B"
              },
              "ZoneA": {
                "default": "Zone (A) to deploy to"
              },
              "ZoneB": {
                "default": "Zone (B) to deploy to"
              }
            }
        }
    },
    "Parameters": {
        "VpcAddress": {
          "Description": "IP address space for new VPC",
          "Type": "String",
          "Default": "192.168.0.0/16",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
          "ConstraintDescription": "Use valid CIDR notation"
        },
        "PublicSubnetAAddress": {
          "Description": "Public helper subnet in A zone. Must be within VPC address space.",
          "Type": "String",
          "Default": "192.168.0.0/25",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "PublicSubnetBAddress": {
          "Description": "Public helper subnet in B zone. Must be within VPC address space.",
          "Type": "String",
          "Default": "192.168.0.128/25",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "ZoneA": {
          "Description": "",
          "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "ZoneB": {
          "Description": "",
          "Type": "AWS::EC2::AvailabilityZone::Name"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": { "Ref": "VpcAddress" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": ["-", [{ "Ref": "AWS::StackName" }, "vpc" ]]}
                    }
                ]
            }
        },
        "PublicSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "ZoneA" },
                "CidrBlock": { "Ref": "PublicSubnetAAddress" },
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": { "Fn::Join": ["-", [{ "Ref": "AWS::StackName" }, "fwnetA" ]]}
                  }
                ]
            }
        },
        "PublicSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "ZoneB" },
                "CidrBlock": { "Ref": "PublicSubnetBAddress" },
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": { "Fn::Join": ["-", [{ "Ref": "AWS::StackName" }, "fwnetB" ]]}
                  }
                ]
            }
        },
        "IGW": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "IGWAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "IGW"
                }
            }
        },
        "PublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": { "Fn::Join": ["-", [{ "Ref": "AWS::StackName" }, "pub-via-IGW" ]]}
                  }
                ]
            }
        },
        "PrivateSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": { "Fn::Join": ["-", [{ "Ref": "AWS::StackName" }, "prv-via-NGF" ]]}
                  }
                ]
            }
        },
        "PublicDefaultRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "IGWAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                },
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                }
            }
        },
        "PrivateDefaultRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "IGWAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                },
                "RouteTableId": {
                    "Ref": "PrivateSubnetRouteTable"
                }
            }
        },
        "PublicSubnetRouteTableAssocA": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnetA"
                }
            }
        },
        "PublicSubnetRouteTableAssocB": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnetB"
                }
            }
        }
    },
    "Outputs": {
      "VpcId": {
        "Description":"",
        "Value": { "Ref": "VPC" },
        "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-VpcId" }}
      },
      "PublicSubnetAId": {
        "Description":"",
        "Value": { "Ref": "PublicSubnetA" },
        "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PublicSubnetAId" }}
      },
      "PublicSubnetBId": {
        "Description":"",
        "Value": { "Ref": "PublicSubnetB" },
        "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PublicSubnetBId" }}
      },
      "PrivateSubnetRouteTableId": {
        "Description":"",
        "Value": { "Ref": "PrivateSubnetRouteTable" },
        "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateSubnetRouteTableId" }}
      }
    }
}
